# gzip config. try it out
# gzip             on;
# gzip_min_length  1000;
# gzip_proxied     expired no-cache no-store private auth;
# gzip_types       application/json application/xml text/plain text/html;

events {
    worker_connections 4096;
}

http {
    # https redirects:
    server {
        listen 80;
        server_name app.ninrod.org;
        root /usr/share/nginx/html;
        index index.html;

        reverse_proxy configuration
        chunked_transfer_encoding on;
        location /rest/ {
          proxy_read_timeout  900;
          proxy_pass_header   Server;
          proxy_cookie_path ~*^/.* /;
          proxy_pass         http://localhost:8081;
          #proxy_set_header   X-Forwarded-Port  $server_port;
          #proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;
          #proxy_set_header   Host              $http_host;
          #proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        }
    }
    #server {
    #    listen 80;
    #    server_name ninrod.org www.ninrod.org;
    #    rewrite     ^ https://$server_name$request_uri? permanent;
    #}
    # alternative http -> https redirect approach
    #server {
    #    server_name ninrod.org;
    #    return 301 https://ninrod.org$request_uri;
    #}

    #server {
        #listen 443 ssl;
        #server_name ninrod.org www.ninrod.org;

        #root /usr/share/nginx/html;

        #index index.html;

        #ssl on;

        ##
        ## These two files will be generated by the LetsEncrypt certbot and be
        ## placed on the HOST machine. We can then pull them in through the host
        ## volume mounting.
        ##
        #ssl_certificate     /etc/letsencrypt/live/ninrod.org/fullchain.pem;
        #ssl_certificate_key /etc/letsencrypt/live/ninrod.org/privkey.pem;

        #ssl_session_timeout 5m;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        #ssl_prefer_server_ciphers on;

        ## reverse_proxy configuration
        ## client_max_body_size 0;
        ## chunked_transfer_encoding on;
        ## location /server/ {
        ##   proxy_read_timeout  900;
        ##   proxy_pass_header   Server;
        ##   proxy_cookie_path ~*^/.* /;
        ##   proxy_pass         http://my-backend-server:8081;
        ##   proxy_set_header   X-Forwarded-Port  $server_port;
        ##   proxy_set_header   X-Forwarded-Proto $http_x_forwarded_proto;
        ##   proxy_set_header   Host              $http_host;
        ##   proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        ## }
    #}
}
